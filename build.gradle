import nu.studer.gradle.jooq.JooqEdition

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.ratpack:ratpack-gradle:${ratpackVersion}"
        classpath "com.github.jengelman.gradle.plugins:shadow:${shadowVersion}"
        classpath "com.github.ben-manes:gradle-versions-plugin:${gradleVersionsPlugin}"
    }
}

plugins {
    id 'idea'
    id 'eclipse'
    id 'io.ratpack.ratpack-groovy' version "${ratpackVersion}"
    id "com.github.johnrengelman.shadow" version "${shadowVersion}"
    id "com.github.ben-manes.versions" version "${gradleVersionsPlugin}"
    id "org.flywaydb.flyway" version "${flywayVersion}"
    id 'nu.studer.jooq' version "${jooqPluginVersion}"
}

repositories {
    mavenCentral()
}

dependencies {

    implementation ratpack.dependency("guice")
    //   compile ratpack.dependency("jackson")
    implementation ratpack.dependency("rx")
//    compile ratpack.dependency("hystrix")
    implementation ratpack.dependency("hikari")
    implementation ratpack.dependency("h2")
    implementation ratpack.dependency("groovy")

    runtimeOnly("org.slf4j:slf4j-simple:1.7.32")

    //Groovy
    implementation("org.codehaus.groovy:groovy-all:${groovyVersion}")

    // JOOQ
    implementation("org.jooq:jooq:${jooqVersion}")

    testImplementation("org.spockframework:spock-core:1.3-groovy-2.5")
    //  testImplementation("org.spockframework:spock-core:2.0-groovy-3.0")

    //postgreSQL
    runtimeOnly("org.postgresql:postgresql:${postgresqlVersion}")
    jooqGenerator("org.postgresql:postgresql:${postgresqlVersion}")

    //H2
    implementation("com.h2database:h2:${h2Version}")

    //Flyway
    //implementation("org.flywaydb:flyway-core:${flywayVersion}")
    implementation("org.flywaydb:flyway-core:5.1.3")

    //hibernate
    //implementation 'org.grails:grails-datastore-gorm-hibernate5:7.0.2.RELEASE'
}

flyway {
    driver = "org.postgresql.Driver"
    url = "jdbc:postgresql://192.168.10.25:5432/finance_db"
    user = 'henninb'
    password = 'monday1'
    schemas = ['public']
    outOfOrder = true
    locations = [
            "classpath:db/migration"
    ]
}


jooq {
    version = "${jooqVersion}"
    edition = JooqEdition.OSS
    configurations {
        main {
            generateSchemaSourceOnCompilation = true

               generationTool {
                   jdbc {
                       driver = 'org.postgresql.Driver'
                       url = 'jdbc:postgresql://192.168.10.25:5432/finance_db'
                       user = 'henninb'
                       password = 'monday1'
                   }

                   generator {
                       name = 'org.jooq.codegen.DefaultGenerator'
                       database {
                            name = 'org.jooq.meta.postgres.PostgresDatabase'
                            inputSchema = 'public'
                            //includes = 't_category, t_description'
                            //excludes = ''
                       }
                       generate {
                           deprecated = false
                           records = true
                           immutablePojos = true
                           fluentSetters = true
                       }

                       strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                   }
              }
        }

    }
}
